<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<!--Define key directories-->
		<ModOutputDir>$(SolutionDir)\..\..\Mods</ModOutputDir>
		<dllDir>$(SolutionDir)\..\..\dll</dllDir>

		<!--Define the mod's info.json-->
		<ModName>FastForward</ModName>
		<HarmonyID>com.tel.fastforward</HarmonyID>
		<ModDescription>Press '4' or click the fast-forward button twice to go faster!</ModDescription>
		<Authors>Tel</Authors>
		<Version>1.2.0</Version>
		<Tags>["gameplay"]</Tags>

		<!--For the JSON Load Order mod (leave it at 0 if not using)-->
		<JSONLoadOrder>0</JSONLoadOrder>

		<!--Other assembly info-->
		<AssemblyName>$(HarmonyID)</AssemblyName>
		<Description>Idol Manager Mod</Description>

		<!--C# and .NET version-->
		<LangVersion>latest</LangVersion>
		<TargetFramework>net46</TargetFramework>
	</PropertyGroup>

	<!--Reference required NuGet packages (ensure the 'compile' asset type is included for UnityEngine)-->
	<ItemGroup>
		<PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies.net46" Version="1.0.3" PrivateAssets="false">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="UnityEngine.Modules" Version="2019.4.23" PrivateAssets="false">
			<IncludeAssets>compile</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<!--Reference key DLL files. Edit as needed.-->
	<ItemGroup>
		<Reference Include="Assembly-CSharp" private="false">
			<HintPath>$(dllDir)\Assembly-CSharp.dll</HintPath>
		</Reference>
		<Reference Include="Assembly-CSharp-firstpass" private="false">
			<HintPath>$(dllDir)\Assembly-CSharp-firstpass.dll</HintPath>
		</Reference>
		<Reference Include="Harmony" private="false">
			<HintPath>$(dllDir)\0Harmony.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.UI" private="false">
			<HintPath>$(dllDir)\UnityEngine.UI.dll</HintPath>
		</Reference>
		<Reference Include="Unity.TextMeshPro" private="false">
			<HintPath>$(dllDir)\Unity.TextMeshPro.dll</HintPath>
		</Reference>
		<Reference Include="DOTween" private="false">
			<HintPath>$(dllDir)\DOTween.dll</HintPath>
		</Reference>
	</ItemGroup>
	
	<!--Upon "Clean", remove the mod folder and its contents-->
	<Target Name="CleanModOutputDir" BeforeTargets="Clean">
		<RemoveDir Directories="$(ModOutputDir)/$(ModName)" Condition="Exists('$(ModOutputDir)/$(ModName)')" />
	</Target>

	<!--After "Build", create the mod folder, then copy in the mod dll and assets-->
	<Target Name="PostBuild" AfterTargets="Build">
		<MakeDir Directories="$(ModOutputDir)\$(ModName)" Condition="!Exists('$(ModOutputDir)\$(ModName)')" />
		<Exec Command="copy /Y &quot;$(TargetDir)$(AssemblyName).dll&quot; &quot;$(ModOutputDir)\$(ModName)\$(AssemblyName).dll&quot;" />
		<Exec Command="xcopy /Y /E /I &quot;assets&quot; &quot;$(ModOutputDir)\$(ModName)&quot;" />
	</Target>

	<!--Create the mod's info.json file by calling the -->
	<Target Name="CreateInfoFile" AfterTargets="Build">
		<CreateInfoJSON
			OutputFilePath="$(ModOutputDir)\$(ModName)\info.json"
			ModName="$(ModName)"
			AssemblyName="$(AssemblyName)"
			ModDescription="$(ModDescription)"
			Version="$(Version)"
			Authors="$(Authors)"
			Tags="$(Tags)"
			JSONLoadOrder="$(JSONLoadOrder)" />
	</Target>

	<!--Task to create the info.json file-->
	<UsingTask TaskName="CreateInfoJSON" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
		<OutputFilePath ParameterType="System.String" Required="true" />
		<ModName ParameterType="System.String" Required="true" />
		<AssemblyName ParameterType="System.String" Required="true" />
		<ModDescription ParameterType="System.String" Required="true" />
		<Version ParameterType="System.String" Required="true" />
		<Authors ParameterType="System.String" Required="true" />
		<Tags ParameterType="System.String" Required="true" />
		<JSONLoadOrder ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System.IO"/>
			<Code Type="Fragment" Language="cs">
				<![CDATA[
var content = $@"{{
""Title"": ""{ModName}"",
""Description"": ""{ModDescription}"",
""Authors"": ""{Authors}"",
""Version"": ""{Version}"",
""Tags"": {Tags},
""JSONLoadOrder"": {JSONLoadOrder},
""HarmonyID"": ""{AssemblyName}""
}}";

File.WriteAllText(OutputFilePath, content);
				]]>
			</Code>
		</Task>
	</UsingTask>

</Project>
